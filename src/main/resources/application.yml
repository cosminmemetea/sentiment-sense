spring:
  datasource:
    url: jdbc:mysql://mysql:3306/sentimentsense_db  # Adresa bazei de date MySQL din container
    username: user  # Numele de utilizator definit în docker-compose.yml
    password: password  # Parola definită în docker-compose.yml
    driver-class-name: com.mysql.cj.jdbc.Driver
    
  sql:
    init:
      mode: always # Runs SQL init scripts on startup. Adjust this based on your environment needs.
  jpa:
    hibernate:
      ddl-auto: update # Automatically updates the schema. Set this to 'none' in production for safety.
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect # MySQL dialect for JPA
    show-sql: true # Enable to see SQL queries in the log. Can be set to false for production.

  kafka:
    bootstrap-servers: kafka:9092  # Kafka rulează într-un container separat
    consumer:
        group-id: sentiment-group
        auto-offset-reset: earliest
        enable-auto-commit: true
    producer:
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.apache.kafka.common.serialization.StringSerializer
    listener:
        missing-topics-fatal: false  # În cazul în care un topic lipsește, nu oprește aplicația

server:
  port: 8080  # Portul pe care rulează aplicația

logging:
  level:
    org:
      springframework:
        kafka: debug  # Pentru a obține loguri detaliate legate de Kafka
